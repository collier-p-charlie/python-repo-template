# This workflow will upload a Python Package to (test) PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  push:
    branches:
      - develop
  release:
    types:
      - published

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ">=3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Get version
        run: |
          VERSION=$(grep ^version pyproject.toml | sed -r 's/^version = "(.*)"(.*)/\1/g')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build release distributions
        run: |
          uv build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  test-pypi-publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    needs:
      - release-build
    permissions:
      # This permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: testpypi
      url: https://test.pypi.org/p/package-name/${{ needs.release-build.outputs.version }}
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to Test PyPI
        run: |
          uv publish --publish-url https://test.pypi.org/legacy/

  pypi-publish:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs:
      - release-build
    permissions:
      # This permission is mandatory for trusted publishing
      id-token: write
    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/project/package-name/${{ needs.release-build.outputs.version }}
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        run: |
          uv publish
